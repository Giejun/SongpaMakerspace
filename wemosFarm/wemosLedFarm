/** Before use this cose.. Need Set time
 *  To set real time, use differenct library..We recommend https://github.com/Makuna/Rtc library. 
 *  This code is for make LED Smart Farm in door 
 *  
 *  Smart Farm LED LIGHT = D2;
 *  Temp & Humidity Sensor (DHT22) = D7;
 *  OLED Display use D3, D4;
 *  DS1302 RTC Module use D8, D9, D10;
 *  FAN for control Temp & Humidiy use D6;
 *  Water Motor to supply water at water tube use D5;
 */

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include "DHT.h" 
#include <DS1302.h>

#include "ThingSpeak.h"
#include <ESP8266WiFi.h>

WiFiClient client;
int status = WL_IDLE_STATUS;
const char *ssid =  "ktEgg_05da";     // replace with your wifi ssid and wpa2 key
const char *pass =  "info06398";

unsigned long myChannelNumber = 995603; // modify this with your own Channel Number
//const char * myReadAPIKey = "7KS3OBQKJBJS08DJ";
const char * myWriteAPIKey = "8O39AZW3EMKOSAQ0";  
 
#define OLED_RESET 0  
Adafruit_SSD1306 display(OLED_RESET);       //OLED Use D3, D4
#define DHTPIN D7                           //DHT22 Temp & Humi Sensor
#define DHTTYPE DHT22  
DHT dht(DHTPIN, DHTTYPE);

DS1302 rtc(D10, D9, D8);                     //DS1302 RTC PINS
Time LT, FANT;

// to Control temp & Humidity use Fan
int FAN = D6;                                //FAN for Temp & Humi
int FAN_readValue;
int maxHum = 30;
int maxTemp = 25;

// set relay on off time for LED Light
int LEDRelay = D2;                           //LED Light
int LED_readValue;

byte OnHour = 18;                           // LED Light On Hour
byte OnMin = 00;                            // LED Light On Minute
byte OffHour = 22;                          // LED Light Off Hour
byte OffMin = 03;                           // LED Light Off Minute

// Set Water supply at plant rood use WMotor
int WMotor = D5;                             //Water Pump or Oxygan Pump
int WMotor_readValue;
int WMState = LOW;
unsigned long WMpreviousMillis = 0;
long WMOnTime = 30000;                       //Water Pump on time
long WMOffTime = 10000;                     // To set Water Pump operate time, work 3secs per 10secs
 
void setup(){ 
  rtc.halt(false);
  rtc.writeProtect(false);

  delay(10);               
  Serial.println("Connecting to ");
  Serial.println(ssid);  
  WiFi.begin(ssid, pass); 
  while (WiFi.status() != WL_CONNECTED){
         delay(500);
         Serial.print(".");
        }
  Serial.println("");
  Serial.println("WiFi connected"); 
    
  ThingSpeak.begin(client);
  
  pinMode(LEDRelay,OUTPUT);
  digitalWrite(LEDRelay, LOW);

  pinMode(FAN, OUTPUT);
  pinMode(WMotor, OUTPUT);
  
 // The following lines can be commented out to use  before to use DS1302, set RTC simple code
 // the values already stored in the DS1302
 //rtc.setDOW(MONDAY);      // Set Day-of-Week to FRIDAY
 //rtc.setTime(18, 08, 0);   // Set the time to 12:00:00 (24hr format)
 //rtc.setDate(17, 2, 2020); // Set the date to August 6th, 2019 
    
  dht.begin(); 
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);                // initialize with the I2C addr 0x3C (for the 64x48)
  display.display();

  Serial.begin(9600);
} 
 
void loop(){
      
  //***********************************************Sensing Temp & Humidity 
  // Reading temperature or humidity takes about 250 milliseconds! 
  float h = dht.readHumidity();
  float t = dht.readTemperature();
  float f = dht.readTemperature(true);  
  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)){
    Serial.println("Failed to read from DHT sensor!");
    return;
   }
  //temp in c

  if(h > maxHum || t > maxTemp){
    digitalWrite(FAN, HIGH);
   } 
  else{
    digitalWrite(FAN, LOW); 
   }

  delay(200);    
  display.clearDisplay();  
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(5,1);    
  display.print("T:");
  display.print(t);
  display.println("C");
  
  display.setTextSize(2 );
  display.setTextColor(WHITE);
  display.setCursor(5,10);   
  display.print("H:");
  display.print(h);
  display.println(" %");
  display.display();
 
//***************************************************** Plant LED ON OFF Control
  LT = rtc.getTime();
  Serial.print(LT.hour);
  Serial.print(":");
  Serial.print(LT.min);
  Serial.print(":");
  Serial.println(LT.sec);
    
  if (LT.hour == OnHour && LT.min == OnMin) {
    digitalWrite(LEDRelay,HIGH);
    Serial.println("LIGHT ON");
  }else if (LT.hour == OffHour && LT.min == OffMin) {
    digitalWrite(LEDRelay,LOW);
    Serial.println("LIGHT OFF"); 
  }

//****************************************************** water Motor or Oxygen Pump Control
 unsigned long WMcurrentMillis = millis();
 if((WMState == HIGH) && (WMcurrentMillis - WMpreviousMillis >= WMOnTime)){
    WMState = LOW;  // Turn it off
    WMpreviousMillis = WMcurrentMillis;                                                         // Remember the time    
      digitalWrite(WMotor,  WMState);                                                           // Update the actual LED
     }
     else if (( WMState == LOW) && (WMcurrentMillis - WMpreviousMillis >= WMOffTime)){
        WMState = HIGH;                                                                          // turn it on 
        WMpreviousMillis = WMcurrentMillis;                                                      // Remember the time
       digitalWrite(WMotor,  WMState);                                                           // Update the actual LED
       }

//*******************************************************  Display sensor & status at ThingSpeak
  LED_readValue = digitalRead(LEDRelay);
  FAN_readValue = digitalRead(FAN);
  WMotor_readValue = digitalRead(WMotor);
   
  ThingSpeak.writeField(myChannelNumber, 1, LED_readValue, myWriteAPIKey);    //Update in ThingSpeak
  ThingSpeak.writeField(myChannelNumber, 2, t, myWriteAPIKey); 
  ThingSpeak.writeField(myChannelNumber, 3, h, myWriteAPIKey); 
  ThingSpeak.writeField(myChannelNumber, 4, FAN_readValue, myWriteAPIKey); 
  ThingSpeak.writeField(myChannelNumber, 5, WMotor_readValue, myWriteAPIKey); 
  
//********************************************************* Serial.print    
  Serial.print("T:");
  Serial.print(t);
  Serial.println("C");
  Serial.print("H:");
  Serial.print(h);
  Serial.println(" %");

  Serial.println(LED_readValue);
  Serial.println(FAN_readValue);
  Serial.println(WMotor_readValue);
  delay (1000);

}
